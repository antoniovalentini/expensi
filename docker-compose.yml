services:
  postgres:
    image: postgres:15
    container_name: expensi-postgres-dev
    environment:
      POSTGRES_DB: expensi
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_strong_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres_prod:
    image: postgres:15
    container_name: expensi-postgres-prod
    environment:
      POSTGRES_DB: expensi
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_strong_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:9
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: a@a.a
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres

  api:
    build:
      dockerfile: ./Dockerfile
    ports:
      - 5008:5008
    environment:
      - ASPNETCORE_URLS=http://*:5008

volumes:
  postgres_data:
  postgres_data_prod:
